[build-system]
requires = ["hatchling>=1.17.1"]
build-backend = "hatchling.build"

[project]
name = "bottom_line"
version = "0.0.0"
description = "Tools for running the CMS Higgs to Two Photons Analysis on NanoAOD"
readme = "README.md"
license = {text = "BSD-3-Clause"}
requires-python = ">=3.8"
authors = [
  { name = "Hgg Group", email = "higgsdna@cern.ch" },
]
maintainers = [
  { name = "Hgg Group", email = "higgsdna@cern.ch" },
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
  "setuptools<71",
  "coffea<2023",
  "awkward<2",
  "vector<=1.4.3",
  "xgboost",
  "pyaml",
  "rich",
  "dask>=2021.10.0",
  "distributed",
  "dask-jobqueue",
  "correctionlib",
  "torch",
  "requests",
  "zuko",
  "onnx",
  "onnxruntime",
]

[project.urls]
Documentation = "https://bottom_line.readthedocs.io/"
"Bug Tracker" = "https://gitlab.cern.ch/HiggsDNA-project/HiggsDNA/issues"
Discussions = "https://gitlab.cern.ch/HiggsDNA-project/HiggsDNA/discussions"
Changelog = "https://gitlab.cern.ch/HiggsDNA-project/HiggsDNA/releases"

[project.optional-dependencies]
dev = ["pytest>=6"]
docs = ["Sphinx>=4.0", "myst-parser>=0.13", "sphinx-book-theme>=0.1.0", "sphinx-copybutton"]
test = ["pytest>=6"]

[project.scripts]
"run_analysis.py" = "bottom_line.scripts.run_analysis:main"
"merge_parquet.py" = "bottom_line.scripts.postprocessing.merge_parquet:main"
"merge_root.py" = "bottom_line.scripts.postprocessing.advanced.merge_root:main"
"convert_parquet_to_root.py" = "bottom_line.scripts.postprocessing.convert_parquet_to_root:main"
"prepare_output_file.py" = "bottom_line.scripts.postprocessing.prepare_output_file:main"
"make_correction_json.py" = "bottom_line.scripts.make_correction_json:main"
"pull_files.py" = "bottom_line.scripts.pull_files:main"
"fetch_datasets.py" = "bottom_line.scripts.samples.fetch_datasets:main"
"download_files.py" = "bottom_line.scripts.samples.download_files:main"
"get_unprocessed_files.py" = "bottom_line.scripts.get_unprocessed_files:main"
"btagging_eff.py" = "bottom_line.scripts.btagging_eff:main"

[tool.hatch.build.targets.sdist]
include = [
    "bottom_line/**",
    "bottom_line/metaconditions/*.json",
    "bottom_line/systematics/JSONs/*",
]

[tool.hatch.build.targets.wheel]
include = [
    "bottom_line/**",
    "bottom_line/metaconditions/*.json",
    "bottom_line/systematics/JSONs/*",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = [
  "-rfesxX",
  "-v",
]
log_cli_level = "DEBUG"
